{"ast":null,"code":"import _classCallCheck from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\src\\\\pages\\\\Home.js\";\nimport React, { Component } from 'react';\nimport HomeBottomNavBar from '../components/HomeBottomNavBar';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { NavLink } from \"react-router-dom\";\nimport PopUpHome from \"../components/HomePopup\";\nimport Axios from \"axios\";\nimport API_ENDPOINT from \"../config\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeMarker: {},\n      selectedPlace: {},\n      showingInfoWindow: false,\n      professionals: [],\n      filteredProfessionals: []\n    };\n\n    _this.onMarkerClick = function (props, marker) {\n      return _this.setState({\n        activeMarker: marker,\n        selectedPlace: props,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onInfoWindowClose = function () {\n      return _this.setState({\n        showingInfoWindow: false,\n        activeMarker: {}\n      });\n    };\n\n    _this.onMapClicked = function () {\n      if (_this.state.showingInfoWindow) _this.setState({\n        showingInfoWindow: false,\n        activeMarker: {}\n      });\n    };\n\n    _this.handleProfessionalsChanged = function (professionals) {\n      _this.setState({\n        filteredProfessionals: professionals\n      });\n    };\n\n    _this.goToProfessionalPage = function () {\n      _this.props.history.push('/more-info/' + _this.state.activeMarker.id);\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Axios.get(\"\".concat(API_ENDPOINT, \"/professionals\")).then(function (response) {\n        var data = response.data;\n        var professionals = Object.values(data);\n\n        _this2.setState({\n          professionals: professionals,\n          filteredProfessionals: professionals\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var googleMarkers = this.state.filteredProfessionals.map(function (professional) {\n        var icon = require('../assets/icons/icons/marker/locate-' + professional.therapy_type.color_code.replace('#', '') + '.svg');\n\n        var iconMarker = new window.google.maps.MarkerImage(icon, null, null, null, new window.google.maps.Size(45, 45));\n        return React.createElement(Marker, {\n          name: 'Current location',\n          icon: iconMarker,\n          position: {\n            lat: professional.latitude,\n            lng: professional.longitude\n          },\n          onClick: _this3.onMarkerClick,\n          id: professional.id,\n          profName: professional.professional_name,\n          profSpec: professional.specialty == null ? '' : 'Specialistatie: ' + professional.specialty,\n          profStreet: professional.street,\n          profPostal: professional.postal + ' ' + professional.city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"homeBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(PopUpHome, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"linkContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/informatie\",\n        className: \"infoLink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Informatie\"))), React.createElement(\"div\", {\n        className: \"map\",\n        onClick: function onClick(e) {\n          if (e.target.classList.contains('more-info-button')) {\n            _this3.goToProfessionalPage();\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 12,\n        className: 'google-maps',\n        onClick: this.onMapClicked,\n        initialCenter: {\n          lat: 51.829133,\n          lng: 5.845228\n        },\n        zoomControl: false,\n        streetViewControl: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, googleMarkers, React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        onClose: this.onInfoWindowClose,\n        visible: this.state.showingInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'popup-box-maps',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'professionalIcon',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../assets/icons/icons/color/logopedie_kleur.svg'),\n        className: \"icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'professionalTitle',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'professionalName',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.activeMarker.profName), React.createElement(\"p\", {\n        className: 'professionalInfo',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.activeMarker.profSpec), React.createElement(\"p\", {\n        className: 'professionalAdress',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.activeMarker.profStreet, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), this.state.activeMarker.profPostal), React.createElement(\"button\", {\n        className: 'more-info-button',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Meer informatie\"))))), React.createElement(HomeBottomNavBar, {\n        onProfessionalsChanged: this.handleProfessionalsChanged,\n        professionals: this.state.professionals,\n        onClick: this.onMapClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCzIMZALyxjW2ZqcdGV7gEFnMceIP3w9B0'\n})(Home);","map":{"version":3,"sources":["E:\\IT\\B302 Projects\\cva-website-react\\src\\pages\\Home.js"],"names":["React","Component","HomeBottomNavBar","Map","InfoWindow","Marker","GoogleApiWrapper","NavLink","PopUpHome","Axios","API_ENDPOINT","Home","state","activeMarker","selectedPlace","showingInfoWindow","professionals","filteredProfessionals","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","handleProfessionalsChanged","goToProfessionalPage","history","push","id","get","then","response","data","Object","values","catch","err","console","log","googleMarkers","map","professional","icon","require","therapy_type","color_code","replace","iconMarker","window","google","maps","MarkerImage","Size","lat","latitude","lng","longitude","professional_name","specialty","street","postal","city","e","target","classList","contains","profName","profSpec","profStreet","profPostal","apiKey"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport HomeBottomNavBar from '../components/HomeBottomNavBar';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PopUpHome from \"../components/HomePopup\";\r\nimport Axios from \"axios\";\r\nimport API_ENDPOINT from \"../config\";\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        showingInfoWindow: false,\r\n        professionals: [],\r\n        filteredProfessionals: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        Axios.get(`${API_ENDPOINT}/professionals`)\r\n            .then(response => {\r\n                const {data} = response;\r\n                const professionals = Object.values(data);\r\n                this.setState({professionals, filteredProfessionals: professionals});\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    onMarkerClick = (props, marker) =>\r\n        this.setState({\r\n            activeMarker: marker,\r\n            selectedPlace: props,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onInfoWindowClose = () =>\r\n        this.setState({\r\n            showingInfoWindow: false,\r\n            activeMarker: {}\r\n        });\r\n\r\n    onMapClicked = () => {\r\n        if (this.state.showingInfoWindow)\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: {}\r\n            });\r\n    };\r\n\r\n    handleProfessionalsChanged = (professionals) => {\r\n        this.setState({filteredProfessionals: professionals});\r\n    };\r\n\r\n    goToProfessionalPage = () => {\r\n        this.props.history.push('/more-info/' + this.state.activeMarker.id);\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n        const googleMarkers = this.state.filteredProfessionals.map((professional) => {\r\n            const icon = require('../assets/icons/icons/marker/locate-' + professional.therapy_type.color_code.replace('#', '') + '.svg');\r\n            const iconMarker = new window.google.maps.MarkerImage(icon, null, null, null, new window.google.maps.Size(45, 45));\r\n            return (\r\n                <Marker name={'Current location'}\r\n                        icon={iconMarker}\r\n                        position={{lat: professional.latitude, lng: professional.longitude}}\r\n                        onClick={this.onMarkerClick}\r\n                        id={professional.id}\r\n                        profName={professional.professional_name}\r\n                        profSpec={professional.specialty == null ? '' : 'Specialistatie: ' + professional.specialty}\r\n                        profStreet={professional.street}\r\n                        profPostal={professional.postal + ' ' + professional.city}/>\r\n            );\r\n        });\r\n\r\n\r\n        return (\r\n            <div className=\"homeBlock\">\r\n                <PopUpHome/>\r\n\r\n                <div className=\"linkContainer\">\r\n                    <NavLink to=\"/informatie\" className=\"infoLink\"><p>Informatie</p></NavLink>\r\n                </div>\r\n\r\n\r\n                <div className=\"map\" onClick={e => {\r\n                    if (e.target.classList.contains('more-info-button')) {\r\n                        this.goToProfessionalPage();\r\n                    }\r\n                }}>\r\n                    <Map google={this.props.google} zoom={12} className={'google-maps'} onClick={this.onMapClicked}\r\n                         initialCenter={{lat: 51.829133, lng: 5.845228}} zoomControl={false}\r\n                         streetViewControl={false}>\r\n\r\n                        {/*for loop over all professionals and their lat and long locations*/}\r\n                        {googleMarkers}\r\n                        <InfoWindow marker={this.state.activeMarker}\r\n                                    onClose={this.onInfoWindowClose}\r\n                                    visible={this.state.showingInfoWindow}>\r\n                            <div className={'popup-box-maps'}>\r\n                                <div className={'professionalIcon'}>\r\n                                    <img src={require('../assets/icons/icons/color/logopedie_kleur.svg')}\r\n                                         className=\"icons\"/>\r\n                                </div>\r\n                                <div className={'professionalTitle'}>\r\n                                    <p className={'professionalName'}>{this.state.activeMarker.profName}</p>\r\n                                    <p className={'professionalInfo'}>{this.state.activeMarker.profSpec}</p>\r\n                                    <p className={'professionalAdress'}>\r\n                                        {this.state.activeMarker.profStreet} <br/>\r\n                                        {this.state.activeMarker.profPostal}\r\n                                    </p>\r\n                                    <button className={'more-info-button'}>Meer informatie</button>\r\n                                </div>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    </Map>\r\n                    <HomeBottomNavBar onProfessionalsChanged={this.handleProfessionalsChanged}\r\n                                      professionals={this.state.professionals} onClick={this.onMapClicked}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyCzIMZALyxjW2ZqcdGV7gEFnMceIP3w9B0'\r\n})(Home)\r\n"]},"metadata":{},"sourceType":"module"}