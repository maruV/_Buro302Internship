{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\src\\\\pages\\\\Contact.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport API_ENDPOINT from \"../config\";\n\nvar Contact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contact, _Component);\n\n  function Contact() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Contact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Contact)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      professionals: [],\n      filteredProfessionals: [],\n      therapyTypes: [],\n      selectedProfessional: {},\n      search: {\n        professional_name: '',\n        therapy_type: ''\n      }\n    };\n\n    _this.getProfessional = function () {\n      return axios.get(\"\".concat(API_ENDPOINT, \"/professionals\"));\n    };\n\n    _this.getTherapyTypes = function () {\n      return axios.get(\"\".concat(API_ENDPOINT, \"/therapy-types\"));\n    };\n\n    _this.handleChange =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var search, filteredProfessionals;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.setState({\n                  search: _objectSpread({}, _this.state.search, _defineProperty({}, e.target.name, e.target.value))\n                });\n\n              case 2:\n                search = _this.state.search;\n                filteredProfessionals = _this.state.professionals.filter(function (professional) {\n                  return professional.professional_name.toLowerCase().includes(search.professional_name.toLowerCase()) && professional.therapy_type.name.toLowerCase().includes(search.therapy_type.toLowerCase());\n                });\n\n                _this.setState({\n                  filteredProfessionals: filteredProfessionals\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.selectProfessional = function (professional) {\n      if (_this.state.selectedProfessional.id === professional.id) {\n        _this.setState({\n          selectedProfessional: {}\n        });\n      } else {\n        _this.setState({\n          selectedProfessional: professional\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Contact, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response, professionals, therapyTypes;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.all([this.getProfessional(), this.getTherapyTypes()]);\n\n              case 2:\n                response = _context2.sent;\n                professionals = response[0].data;\n                therapyTypes = response[1].data;\n                this.setState({\n                  professionals: professionals,\n                  filteredProfessionals: professionals,\n                  therapyTypes: therapyTypes\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          filteredProfessionals = _this$state.filteredProfessionals,\n          search = _this$state.search,\n          selectedProfessional = _this$state.selectedProfessional;\n      var professionalList = filteredProfessionals.map(function (professional) {\n        var selected = professional.id === selectedProfessional.id ? 'selected' : '';\n        return React.createElement(\"div\", {\n          className: \"nameContainer \".concat(selected),\n          key: professional.id,\n          onClick: function onClick() {\n            _this2.selectProfessional(professional);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"nameText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, professional.professional_name, \", \\xA0\", React.createElement(\"span\", {\n          style: {\n            color: professional.therapy_type.color_code\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, professional.therapy_type.name)));\n      });\n      return React.createElement(\"div\", {\n        className: \"ContactPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"textContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"filterHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" 1.Kies de professional \"), React.createElement(\"p\", {\n        className: \"filterText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Uit de onderstaande lijst kunt u een professional\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), \"kiezen die u een bericht wilt sturen.\")), React.createElement(\"div\", {\n        className: \"filterContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputIconContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"iconWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../assets/icons/icons/search_icon.svg'),\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        placeholder: \"Zoek op naam\",\n        className: \"placeText\",\n        value: search.professional_name,\n        onChange: this.handleChange,\n        name: \"professional_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"inputIconContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"iconWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../assets/icons/icons/search_icon.svg'),\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        placeholder: \"Zoek op professie\",\n        className: \"placeText\",\n        value: search.therapy_type,\n        onChange: this.handleChange,\n        name: \"therapy_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"filteredList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, professionalList))), React.createElement(\"div\", {\n        className: \"ContactFormContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"textContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"FormHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \" 2. Stuur de professional een bericht \"), React.createElement(\"p\", {\n        className: \"FormText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" \", !selectedProfessional.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Kies in de linkerkolom de professional die u een bericht wilt sturen.\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Stuur uw bericht naar \", selectedProfessional.professional_name, \", \", selectedProfessional.therapy_type.name), React.createElement(\"br\", {\n        id: \"TextNewLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), \" Vul het formulier in en kilk op verzenden\")), React.createElement(\"form\", {\n        className: \"inputContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Naam\",\n        className: \"placeText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"E-mailadres\",\n        className: \"placeText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Telefoonnummer\",\n        className: \"placeText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        placeholder: \"Type hier je bericht\",\n        className: \"placeTextBig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submitButton\",\n        disabled: !selectedProfessional.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \" Verzend bericht \"))));\n    }\n  }]);\n\n  return Contact;\n}(Component);\n\nexport default Contact;","map":{"version":3,"sources":["E:\\IT\\B302 Projects\\cva-website-react\\src\\pages\\Contact.js"],"names":["React","Component","axios","API_ENDPOINT","Contact","state","professionals","filteredProfessionals","therapyTypes","selectedProfessional","search","professional_name","therapy_type","getProfessional","get","getTherapyTypes","handleChange","e","setState","target","name","value","filter","professional","toLowerCase","includes","selectProfessional","id","all","response","data","professionalList","map","selected","color","color_code","require"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,WAAzB;;IAEMC,O;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,aAAa,EAAE,EADX;AAEJC,MAAAA,qBAAqB,EAAE,EAFnB;AAGJC,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,oBAAoB,EAAE,EAJlB;AAKJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,iBAAiB,EAAE,EADf;AAEJC,QAAAA,YAAY,EAAE;AAFV;AALJ,K;;UAWRC,e,GAAkB,YAAM;AACpB,aAAOX,KAAK,CAACY,GAAN,WAAaX,YAAb,oBAAP;AACH,K;;UAEDY,e,GAAkB,YAAM;AACpB,aAAOb,KAAK,CAACY,GAAN,WAAaX,YAAb,oBAAP;AACH,K;;UASDa,Y;;;;;+BAAe,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACL,MAAKC,QAAL,CAAc;AAACR,kBAAAA,MAAM,oBAAM,MAAKL,KAAL,CAAWK,MAAjB,sBAA0BO,CAAC,CAACE,MAAF,CAASC,IAAnC,EAA0CH,CAAC,CAACE,MAAF,CAASE,KAAnD;AAAP,iBAAd,CADK;;AAAA;AAGJX,gBAAAA,MAHI,GAGM,MAAKL,KAHX,CAGJK,MAHI;AAMLH,gBAAAA,qBANK,GAMmB,MAAKF,KAAL,CAAWC,aAAX,CAAyBgB,MAAzB,CAAgC,UAAAC,YAAY,EAAI;AAC1E,yBAAOA,YAAY,CAACZ,iBAAb,CAA+Ba,WAA/B,GAA6CC,QAA7C,CAAsDf,MAAM,CAACC,iBAAP,CAAyBa,WAAzB,EAAtD,KACAD,YAAY,CAACX,YAAb,CAA0BQ,IAA1B,CAA+BI,WAA/B,GAA6CC,QAA7C,CAAsDf,MAAM,CAACE,YAAP,CAAoBY,WAApB,EAAtD,CADP;AAEH,iBAH6B,CANnB;;AAWX,sBAAKN,QAAL,CAAc;AAACX,kBAAAA,qBAAqB,EAArBA;AAAD,iBAAd;;AAXW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAcfmB,kB,GAAqB,UAACH,YAAD,EAAkB;AACnC,UAAI,MAAKlB,KAAL,CAAWI,oBAAX,CAAgCkB,EAAhC,KAAuCJ,YAAY,CAACI,EAAxD,EAA2D;AACvD,cAAKT,QAAL,CAAc;AAACT,UAAAA,oBAAoB,EAAE;AAAvB,SAAd;AACH,OAFD,MAEO;AACH,cAAKS,QAAL,CAAc;AAACT,UAAAA,oBAAoB,EAAEc;AAAvB,SAAd;AACH;AACJ,K;;;;;;;;;;;;;;;;;uBA1B0BrB,KAAK,CAAC0B,GAAN,CAAU,CAAC,KAAKf,eAAL,EAAD,EAAyB,KAAKE,eAAL,EAAzB,CAAV,C;;;AAAjBc,gBAAAA,Q;AACAvB,gBAAAA,a,GAAgBuB,QAAQ,CAAC,CAAD,CAAR,CAAYC,I;AAC5BtB,gBAAAA,Y,GAAeqB,QAAQ,CAAC,CAAD,CAAR,CAAYC,I;AACjC,qBAAKZ,QAAL,CAAc;AAACZ,kBAAAA,aAAa,EAAbA,aAAD;AAAgBC,kBAAAA,qBAAqB,EAAED,aAAvC;AAAsDE,kBAAAA,YAAY,EAAZA;AAAtD,iBAAd;;;;;;;;;;;;;;;;;;6BA0BK;AAAA;;AAAA,wBAEyD,KAAKH,KAF9D;AAAA,UAEEE,qBAFF,eAEEA,qBAFF;AAAA,UAEyBG,MAFzB,eAEyBA,MAFzB;AAAA,UAEiCD,oBAFjC,eAEiCA,oBAFjC;AAKL,UAAMsB,gBAAgB,GAAGxB,qBAAqB,CAACyB,GAAtB,CAA0B,UAAAT,YAAY,EAAI;AAC/D,YAAMU,QAAQ,GAAGV,YAAY,CAACI,EAAb,KAAoBlB,oBAAoB,CAACkB,EAAzC,GAA8C,UAA9C,GAA2D,EAA5E;AAEA,eACI;AAAK,UAAA,SAAS,0BAAmBM,QAAnB,CAAd;AAA6C,UAAA,GAAG,EAAEV,YAAY,CAACI,EAA/D;AAAmE,UAAA,OAAO,EAAE,mBAAM;AAAC,YAAA,MAAI,CAACD,kBAAL,CAAwBH,YAAxB;AAAsC,WAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,YAAY,CAACZ,iBADlB,YAEI;AAAM,UAAA,KAAK,EAAE;AAACuB,YAAAA,KAAK,EAAEX,YAAY,CAACX,YAAb,CAA0BuB;AAAlC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6DZ,YAAY,CAACX,YAAb,CAA0BQ,IAAvF,CAFJ,CADJ,CADJ;AASH,OAZwB,CAAzB;AAcA,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAGI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,0CAHJ,CAHJ,EAaI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEgB,OAAO,CAAC,uCAAD,CAAjB;AAA4D,QAAA,SAAS,EAAC,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAO,QAAA,WAAW,EAAC,cAAnB;AAAkC,QAAA,SAAS,EAAC,WAA5C;AACO,QAAA,KAAK,EAAE1B,MAAM,CAACC,iBADrB;AAEO,QAAA,QAAQ,EAAE,KAAKK,YAFtB;AAEoC,QAAA,IAAI,EAAE,mBAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAFJ,EAYI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEoB,OAAO,CAAC,uCAAD,CAAjB;AAA4D,QAAA,SAAS,EAAC,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAO,QAAA,WAAW,EAAC,mBAAnB;AAAuC,QAAA,SAAS,EAAC,WAAjD;AACO,QAAA,KAAK,EAAE1B,MAAM,CAACE,YADrB;AACmC,QAAA,QAAQ,EAAE,KAAKI,YADlD;AAEO,QAAA,IAAI,EAAE,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAZJ,CAFJ,EA2BI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKe,gBADL,CA3BJ,CAbJ,CAFJ,EAiDI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,EAGI;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0B,CAACtB,oBAAoB,CAACkB,EAAtB,GACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADsB,GAEtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA6BlB,oBAAoB,CAACE,iBAAlD,QAAuEF,oBAAoB,CAACG,YAArB,CAAkCQ,IAAzG,CAFJ,EAII;AAAI,QAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,+CAHJ,CAFJ,EAaI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,WAAW,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,WAAW,EAAC,aAAnB;AAAiC,QAAA,SAAS,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAO,QAAA,WAAW,EAAC,gBAAnB;AAAoC,QAAA,SAAS,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAU,QAAA,WAAW,EAAC,sBAAtB;AAA6C,QAAA,SAAS,EAAC,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,QAAQ,EAAE,CAACX,oBAAoB,CAACkB,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALJ,CAbJ,CAjDJ,CADJ;AA0EH;;;;EAhJiB1B,S;;AAoJtB,eAAeG,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport API_ENDPOINT from \"../config\";\r\n\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n        professionals: [],\r\n        filteredProfessionals: [],\r\n        therapyTypes: [],\r\n        selectedProfessional: {},\r\n        search: {\r\n            professional_name: '',\r\n            therapy_type: '',\r\n        }\r\n    };\r\n\r\n    getProfessional = () => {\r\n        return axios.get(`${API_ENDPOINT}/professionals`);\r\n    };\r\n\r\n    getTherapyTypes = () => {\r\n        return axios.get(`${API_ENDPOINT}/therapy-types`);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await axios.all([this.getProfessional(), this.getTherapyTypes()]);\r\n        const professionals = response[0].data;\r\n        const therapyTypes = response[1].data;\r\n        this.setState({professionals, filteredProfessionals: professionals, therapyTypes});\r\n    }\r\n\r\n    handleChange = async (e) => {\r\n        await this.setState({search: {...this.state.search, [e.target.name]: e.target.value}});\r\n\r\n        const {search} = this.state;\r\n\r\n\r\n        const filteredProfessionals = this.state.professionals.filter(professional => {\r\n            return professional.professional_name.toLowerCase().includes(search.professional_name.toLowerCase())\r\n                && professional.therapy_type.name.toLowerCase().includes(search.therapy_type.toLowerCase());\r\n        })\r\n\r\n        this.setState({filteredProfessionals});\r\n    };\r\n\r\n    selectProfessional = (professional) => {\r\n        if (this.state.selectedProfessional.id === professional.id){\r\n            this.setState({selectedProfessional: {}});\r\n        } else {\r\n            this.setState({selectedProfessional: professional});\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {filteredProfessionals, search, selectedProfessional} = this.state;\r\n\r\n\r\n        const professionalList = filteredProfessionals.map(professional => {\r\n            const selected = professional.id === selectedProfessional.id ? 'selected' : '';\r\n\r\n            return (\r\n                <div className={`nameContainer ${selected}`} key={professional.id} onClick={() => {this.selectProfessional(professional)}}>\r\n                    <p className=\"nameText\">\r\n                        {professional.professional_name}, &nbsp;\r\n                        <span style={{color: professional.therapy_type.color_code}}>{professional.therapy_type.name}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"ContactPage\">\r\n\r\n                <div className=\"leftContainer\">\r\n\r\n                    {/* text describing the below search filter */}\r\n                    <div className=\"textContainer\">\r\n                        <p className=\"filterHeader\"> 1.Kies de professional </p>\r\n\r\n                        <p className=\"filterText\">\r\n                            Uit de onderstaande lijst kunt u een professional\r\n                            <br/>\r\n                            kiezen die u een bericht wilt sturen.\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"filterContainer\">\r\n                        {/* this form lets the user filter the search */}\r\n                        <div className=\"formContainer\">\r\n\r\n                            <div className=\"inputIconContainer\">\r\n                                <div className=\"iconWrapper\">\r\n                                    <img src={require('../assets/icons/icons/search_icon.svg')} className=\"icon\"/>\r\n                                </div>\r\n                                <input placeholder=\"Zoek op naam\" className=\"placeText\"\r\n                                       value={search.professional_name}\r\n                                       onChange={this.handleChange} name={\"professional_name\"}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"inputIconContainer\">\r\n                                <div className=\"iconWrapper\">\r\n                                    <img src={require('../assets/icons/icons/search_icon.svg')} className=\"icon\"/>\r\n                                </div>\r\n                                <input placeholder=\"Zoek op professie\" className=\"placeText\"\r\n                                       value={search.therapy_type} onChange={this.handleChange}\r\n                                       name={\"therapy_type\"}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {/* displays the list of professional according to the filter */}\r\n                        <div className=\"filteredList\">\r\n                            {professionalList}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"ContactFormContainer\">\r\n\r\n                    <div className=\"textContainer\">\r\n                        <p className=\"FormHeader\"> 2. Stuur de professional een bericht </p>\r\n\r\n                        <p className=\"FormText\"> {!selectedProfessional.id ?\r\n                            <span>Kies in de linkerkolom de professional die u een bericht wilt sturen.</span> :\r\n                            <span>Stuur uw bericht naar {selectedProfessional.professional_name}, {selectedProfessional.therapy_type.name}</span>\r\n                        }\r\n                            <br id=\"TextNewLine\" /> Vul het formulier in en kilk op verzenden\r\n                        </p>\r\n                    </div>\r\n\r\n                    <form className=\"inputContainer\">\r\n                        <input placeholder=\"Naam\" className=\"placeText\"/>\r\n                        <input placeholder=\"E-mailadres\" className=\"placeText\"/>\r\n                        <input placeholder=\"Telefoonnummer\" className=\"placeText\"/>\r\n                        <textarea placeholder=\"Type hier je bericht\" className=\"placeTextBig\"/>\r\n                        <button className=\"submitButton\" disabled={!selectedProfessional.id}> Verzend bericht </button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;\r\n"]},"metadata":{},"sourceType":"module"}