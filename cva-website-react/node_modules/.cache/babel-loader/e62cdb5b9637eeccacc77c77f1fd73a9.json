{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\IT\\\\B302 Projects\\\\cva-website-react\\\\src\\\\pages\\\\Contact.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport API_ENDPOINT from \"../config\";\nimport ContactPopup from \"../components/ContactPopup\";\n\nvar Contact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contact, _Component);\n\n  function Contact() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Contact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Contact)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      professionals: [],\n      filteredProfessionals: [],\n      therapyTypes: [],\n      selectedProfessional: {},\n      search: {\n        professional_name: '',\n        therapy_type: ''\n      },\n      form: {\n        name: '',\n        email: '',\n        phone: '',\n        content: ''\n      },\n      showPopup: false\n    };\n\n    _this.getProfessional = function () {\n      return axios.get(\"\".concat(API_ENDPOINT, \"/professionals\"));\n    };\n\n    _this.getTherapyTypes = function () {\n      return axios.get(\"\".concat(API_ENDPOINT, \"/therapy-types\"));\n    };\n\n    _this.handleChange =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var search, filteredProfessionals;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.setState({\n                  search: _objectSpread({}, _this.state.search, _defineProperty({}, e.target.name, e.target.value))\n                });\n\n              case 2:\n                search = _this.state.search;\n                filteredProfessionals = _this.state.professionals.filter(function (professional) {\n                  return professional.professional_name.toLowerCase().includes(search.professional_name.toLowerCase()) && professional.therapy_type.name.toLowerCase().includes(search.therapy_type.toLowerCase());\n                });\n\n                _this.setState({\n                  filteredProfessionals: filteredProfessionals\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChangeForm = function (e) {\n      var form = _this.state.form;\n\n      _this.setState({\n        form: _objectSpread({}, form, _defineProperty({}, e.target.name, e.target.value))\n      });\n\n      console.log(_this.state.form);\n    };\n\n    _this.selectProfessional = function (professional) {\n      if (_this.state.selectedProfessional.id === professional.id) {\n        _this.setState({\n          selectedProfessional: {}\n        });\n      } else {\n        _this.setState({\n          selectedProfessional: professional\n        });\n      }\n    };\n\n    _this.submitContactForm = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        form: {\n          name: '',\n          email: '',\n          phone: '',\n          content: ''\n        },\n        selectedProfessional: {},\n        showPopup: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          showPopup: false\n        });\n      }, 1000);\n    };\n\n    return _this;\n  }\n\n  _createClass(Contact, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response, professionals, therapyTypes;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.all([this.getProfessional(), this.getTherapyTypes()]);\n\n              case 2:\n                response = _context2.sent;\n                professionals = response[0].data;\n                therapyTypes = response[1].data;\n                this.setState({\n                  professionals: professionals,\n                  filteredProfessionals: professionals,\n                  therapyTypes: therapyTypes\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          filteredProfessionals = _this$state.filteredProfessionals,\n          search = _this$state.search,\n          selectedProfessional = _this$state.selectedProfessional,\n          form = _this$state.form,\n          showPopup = _this$state.showPopup;\n      var professionalList = filteredProfessionals.map(function (professional) {\n        var selected = professional.id === selectedProfessional.id ? 'selected' : '';\n        return React.createElement(\"div\", {\n          className: \"nameContainer \".concat(selected),\n          key: professional.id,\n          onClick: function onClick() {\n            _this2.selectProfessional(professional);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"nameText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, professional.professional_name, \", \\xA0\", React.createElement(\"span\", {\n          style: {\n            color: professional.therapy_type.color_code\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, professional.therapy_type.name)));\n      });\n      return React.createElement(\"div\", {\n        className: \"ContactPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(ContactPopup, {\n        showPopup: showPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"leftContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"textContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"filterHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \" 1.Kies de professional \"), React.createElement(\"p\", {\n        className: \"filterText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Uit de onderstaande lijst kunt u een professional\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), \"kiezen die u een bericht wilt sturen.\")), React.createElement(\"div\", {\n        className: \"filterContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputIconContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"iconWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../assets/icons/icons/search_icon.svg'),\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        placeholder: \"Zoek op naam\",\n        className: \"placeText\",\n        value: search.professional_name,\n        onChange: this.handleChange,\n        name: \"professional_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"inputIconContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"iconWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../assets/icons/icons/search_icon.svg'),\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        placeholder: \"Zoek op professie\",\n        className: \"placeText\",\n        value: search.therapy_type,\n        onChange: this.handleChange,\n        name: \"therapy_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"filteredList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, professionalList))), React.createElement(\"div\", {\n        className: \"ContactFormContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"textContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"FormHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \" 2. Stuur de professional een bericht \"), React.createElement(\"p\", {\n        className: \"FormText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \" \", !selectedProfessional.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Kies in de linkerkolom de professional die u een bericht wilt sturen.\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Stuur uw bericht naar \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, selectedProfessional.professional_name, \", \", selectedProfessional.therapy_type.name)), React.createElement(\"br\", {\n        id: \"TextNewLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), \" Vul het formulier in en kilk op verzenden\")), React.createElement(\"form\", {\n        className: \"inputContainer\",\n        onSubmit: this.submitContactForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Naam\",\n        className: \"placeText\",\n        required: true,\n        value: form.name,\n        onChange: this.handleChangeForm,\n        name: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"E-mailadres\",\n        className: \"placeText\",\n        required: true,\n        value: form.email,\n        onChange: this.handleChangeForm,\n        name: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Telefoonnummer\",\n        className: \"placeText\",\n        value: form.phone,\n        onChange: this.handleChangeForm,\n        name: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        placeholder: \"Type hier je bericht\",\n        className: \"placeTextBig\",\n        required: true,\n        value: form.content,\n        onChange: this.handleChangeForm,\n        name: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submitButton\",\n        disabled: !selectedProfessional.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \" Verzend bericht \"))));\n    }\n  }]);\n\n  return Contact;\n}(Component);\n\nexport default Contact;","map":{"version":3,"sources":["E:\\IT\\B302 Projects\\cva-website-react\\src\\pages\\Contact.js"],"names":["React","Component","axios","API_ENDPOINT","ContactPopup","Contact","state","professionals","filteredProfessionals","therapyTypes","selectedProfessional","search","professional_name","therapy_type","form","name","email","phone","content","showPopup","getProfessional","get","getTherapyTypes","handleChange","e","setState","target","value","filter","professional","toLowerCase","includes","handleChangeForm","console","log","selectProfessional","id","submitContactForm","preventDefault","setTimeout","all","response","data","professionalList","map","selected","color","color_code","require"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport API_ENDPOINT from \"../config\";\r\nimport ContactPopup from \"../components/ContactPopup\";\r\n\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n        professionals: [],\r\n        filteredProfessionals: [],\r\n        therapyTypes: [],\r\n        selectedProfessional: {},\r\n        search: {\r\n            professional_name: '',\r\n            therapy_type: '',\r\n        },\r\n        form: {\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            content: ''\r\n        },\r\n        showPopup: false\r\n    };\r\n\r\n    getProfessional = () => {\r\n        return axios.get(`${API_ENDPOINT}/professionals`);\r\n    };\r\n\r\n    getTherapyTypes = () => {\r\n        return axios.get(`${API_ENDPOINT}/therapy-types`);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await axios.all([this.getProfessional(), this.getTherapyTypes()]);\r\n        const professionals = response[0].data;\r\n        const therapyTypes = response[1].data;\r\n        this.setState({professionals, filteredProfessionals: professionals, therapyTypes});\r\n    }\r\n\r\n    handleChange = async (e) => {\r\n        await this.setState({search: {...this.state.search, [e.target.name]: e.target.value}});\r\n\r\n        const {search} = this.state;\r\n\r\n\r\n        const filteredProfessionals = this.state.professionals.filter(professional => {\r\n            return professional.professional_name.toLowerCase().includes(search.professional_name.toLowerCase())\r\n                && professional.therapy_type.name.toLowerCase().includes(search.therapy_type.toLowerCase());\r\n        });\r\n\r\n        this.setState({filteredProfessionals});\r\n    };\r\n\r\n    handleChangeForm = e => {\r\n        const {form} = this.state;\r\n        this.setState({form: {...form, [e.target.name]: e.target.value}});\r\n\r\n        console.log(this.state.form);\r\n    };\r\n\r\n    selectProfessional = (professional) => {\r\n        if (this.state.selectedProfessional.id === professional.id){\r\n            this.setState({selectedProfessional: {}});\r\n        } else {\r\n            this.setState({selectedProfessional: professional});\r\n        }\r\n    }\r\n\r\n    submitContactForm = (e) => {\r\n        e.preventDefault();\r\n        this.setState({form: {\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                content: ''\r\n            },\r\n            selectedProfessional: {},\r\n            showPopup: true\r\n        });\r\n\r\n        setTimeout( () => {\r\n            this.setState({\r\n                showPopup: false\r\n            })\r\n        }, 1000);\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {filteredProfessionals, search, selectedProfessional, form, showPopup} = this.state;\r\n\r\n\r\n        const professionalList = filteredProfessionals.map(professional => {\r\n            const selected = professional.id === selectedProfessional.id ? 'selected' : '';\r\n\r\n            return (\r\n                <div className={`nameContainer ${selected}`} key={professional.id} onClick={() => {this.selectProfessional(professional)}}>\r\n                    <p className=\"nameText\">\r\n                        {professional.professional_name}, &nbsp;\r\n                        <span style={{color: professional.therapy_type.color_code}}>{professional.therapy_type.name}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"ContactPage\">\r\n\r\n                <ContactPopup showPopup={showPopup} />\r\n\r\n                <div className=\"leftContainer\">\r\n\r\n                    {/* text describing the below search filter */}\r\n                    <div className=\"textContainer\">\r\n                        <p className=\"filterHeader\"> 1.Kies de professional </p>\r\n\r\n                        <p className=\"filterText\">\r\n                            Uit de onderstaande lijst kunt u een professional\r\n                            <br/>\r\n                            kiezen die u een bericht wilt sturen.\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"filterContainer\">\r\n                        {/* this form lets the user filter the search */}\r\n                        <div className=\"formContainer\">\r\n\r\n                            <div className=\"inputIconContainer\">\r\n                                <div className=\"iconWrapper\">\r\n                                    <img src={require('../assets/icons/icons/search_icon.svg')} className=\"icon\"/>\r\n                                </div>\r\n                                <input placeholder=\"Zoek op naam\" className=\"placeText\"\r\n                                       value={search.professional_name}\r\n                                       onChange={this.handleChange} name={\"professional_name\"}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"inputIconContainer\">\r\n                                <div className=\"iconWrapper\">\r\n                                    <img src={require('../assets/icons/icons/search_icon.svg')} className=\"icon\"/>\r\n                                </div>\r\n                                <input placeholder=\"Zoek op professie\" className=\"placeText\"\r\n                                       value={search.therapy_type} onChange={this.handleChange}\r\n                                       name={\"therapy_type\"}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {/* displays the list of professional according to the filter */}\r\n                        <div className=\"filteredList\">\r\n                            {professionalList}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"ContactFormContainer\">\r\n\r\n                    <div className=\"textContainer\">\r\n                        <p className=\"FormHeader\"> 2. Stuur de professional een bericht </p>\r\n\r\n                        <p className=\"FormText\"> {!selectedProfessional.id ?\r\n                            <span>Kies in de linkerkolom de professional die u een bericht wilt sturen.</span> :\r\n                            <span>Stuur uw bericht naar <b>{selectedProfessional.professional_name}, {selectedProfessional.therapy_type.name}</b></span>\r\n                        }\r\n                            <br id=\"TextNewLine\" /> Vul het formulier in en kilk op verzenden\r\n                        </p>\r\n                    </div>\r\n\r\n                    <form className=\"inputContainer\" onSubmit={this.submitContactForm}>\r\n                        <input placeholder=\"Naam\" className=\"placeText\" required\r\n                        value={form.name} onChange={this.handleChangeForm} name={\"name\"}\r\n                        />\r\n                        <input placeholder=\"E-mailadres\" className=\"placeText\" required\r\n                        value={form.email} onChange={this.handleChangeForm} name={\"email\"}\r\n                        />\r\n                        <input placeholder=\"Telefoonnummer\" className=\"placeText\"\r\n                        value={form.phone} onChange={this.handleChangeForm} name={\"phone\"}\r\n                        />\r\n                        <textarea placeholder=\"Type hier je bericht\" className=\"placeTextBig\" required\r\n                        value={form.content} onChange={this.handleChangeForm} name={\"content\"}\r\n                        />\r\n                        <button className=\"submitButton\" disabled={!selectedProfessional.id}> Verzend bericht </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;\r\n"]},"metadata":{},"sourceType":"module"}